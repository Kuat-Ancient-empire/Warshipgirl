namespace = uf_ship
# 解散联合棱镜核心，触发部署事件
fleet_event = {
	id = uf_ship.2
	title = uf_ship.2.name
	desc = uf_ship.2.desc
	is_triggered_only = yes
	location = solar_system
	picture = GFX_evt_uf_portal
	trigger = {
		is_in_combat = no
		is_ship_size = uf_mobile_portal
	}
	immediate = {
		solar_system = {
			save_event_target_as = portal_system
			spawn_megastructure = {
				type = uf_mobile_portal
				planet = system_star
				owner = root.owner
				orbit_angle = 225
				orbit_distance = 100
				init_effect = {
					activate_gateway = this
					save_event_target_as = uf_portal
					set_megastructure_flag = uf_portal@root.owner
				}
			}
			create_fleet = {
				name = "NAME_uf_portal_entity"
				effect = {
					set_owner = root.owner
					set_location = {
						target = event_target:uf_portal
						angle = 135
					}
					create_ship = {
						design = "NAME_UF_Portal"
						graphical_culture = owner
						prefix = yes
					}
					create_ship = {
						design = "NAME_UF_Portal2"
						graphical_culture = owner
						prefix = yes
					}
					set_fleet_flag = uf_portal_entity_fleet
					set_event_locked = yes
				}
				settings = {
					can_change_composition = no
					can_change_leader = no
					can_disband = no
					can_upgrade = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
			}
		}
		delete_fleet = { target = this destroy_template = yes }
	}
	option = { name = uf_ship.2.c }
}

# 传送门实体被摧毁，移除传送门
country_event = {
	id = uf_ship.6
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		fromfrom = {
			has_fleet_flag = uf_portal_entity_fleet
		}
	}
	immediate = {
		fromfrom.solar_system = {
			random_system_megastructure = {
				limit = {
					is_megastructure_type = uf_mobile_portal
				}
				remove_megastructure = this
			}
		}
	}
}

# 使用说明书
country_event = {
	id = uf_ship.7
	title = uf_ship.7.name
	desc = uf_ship.7.desc
	is_triggered_only = yes
	picture = GFX_evt_uf_portal
	trigger = {
		last_increased_tech = tech_uf_mobile_portal
	}
	option = {
		name = uf_ship.7.a
	}
}

# 联合
# 核心被摧毁，直接原地造一个限时的
country_event = {
	id = uf_ship.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		fromfrom = {
			is_ship_size = uf_mobile_portal
		}
	}
	immediate = {
		fromfrom.solar_system = {
			if = {
				limit = {
					NOT = {
						any_system_megastructure = {
							OR = {
								is_megastructure_type = uf_mobile_portal
								is_megastructure_type = uf_mobile_portal_temp
								is_megastructure_type = gateway_final
								is_megastructure_type = gateway_restored
							}
						}
					}
				}
				spawn_megastructure = {
					type = uf_mobile_portal_temp
					planet = system_star
					owner = root
					orbit_angle = 225
					orbit_distance = 100
					init_effect = {
						activate_gateway = this
						save_event_target_as = uf_portal
						set_megastructure_flag = uf_portal@root
					}
				}
				create_fleet = {
					name = "NAME_uf_portal_entity"
					effect = {
						set_owner = root
						set_location = {
							target = event_target:uf_portal
							angle = 135
						}
						create_ship = {
							design = "NAME_UF_Portal"
							graphical_culture = owner
							prefix = yes
						}
						create_ship = {
							design = "NAME_UF_Portal2"
							graphical_culture = owner
							prefix = yes
						}
						set_fleet_flag = uf_portal_entity_fleet
						set_event_locked = yes
					}
					settings = {
						can_change_composition = no
						can_change_leader = no
						can_disband = no
						can_upgrade = no
						spawn_debris = no
						ai_ignore_strength = yes
					}
				}
				system_event = {
					id = uf_ship.9
					days = 1800
				}
				root = {
					country_event = {
						id = uf_ship.11
						scopes = {
							from = prev
						}
					}
				}
			}
		}
	}
}

system_event = {
	id = uf_ship.9
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_system_megastructure = {
			limit = {
				is_megastructure_type = uf_mobile_portal_temp
			}
			remove_megastructure = this
		}
		random_fleet_in_system = {
			limit = {
				has_fleet_flag = uf_portal_entity_fleet
			}
			delete_fleet = {
				target = this
				destroy_template = yes
			}
		}
	}
}

# 传送门残骸
country_event = {
	id = uf_ship.11
	title = uf_ship.11.name
	desc = uf_ship.11.desc
	is_triggered_only = yes
	picture = GFX_evt_exploding_ship
	show_sound = event_ship_explosion
	location = FROM
	trackable = YES
	option = {
		name = uf_ship.11.a
	}
}

country_event = {
	id = uf_ship.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		from = {
			is_megastructure_type = uf_mobile_portal2
		}
	}
	immediate = {
		from = {
			create_fleet = {
				name = "NAME_uf_mobile_portal"
				effect = {
					set_owner = root.owner
					set_location = prev
					create_ship = {
						random_existing_design = uf_mobile_portal
						graphical_culture = owner
						prefix = yes
					}
				}
				settings = {
					can_change_composition = no
					can_change_leader = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
			}
			remove_megastructure = this
		}
		fromfrom = {
			random_fleet_in_system = {
				limit = {
					has_fleet_flag = uf_portal_entity_fleet
				}
				delete_fleet = {
					target = this
					destroy_template = yes
				}
			}
		}
	}
}

# 月检，如果棱镜核心在别人家里展开而战争打完了或没有通行权就收回成舰队
country_event = {
	id = uf_ship.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_united_fleet
		any_controlled_fleet = {
			has_fleet_flag = uf_portal_entity_fleet
		}
		exists = solar_system
		solar_system = {
			exists = space_owner
			space_owner = {
				NOT = {
					is_same_value = root
				}
				has_closed_borders = root
				NOT = {
					is_at_war_with = root
				}
			}
		}
	}
	immediate = {
		every_controlled_fleet = {
			limit = {
				has_fleet_flag = uf_portal_entity_fleet
				solar_system = {
					exists = space_owner
					space_owner = {
						NOT = {
							is_same_value = root
						}
						has_closed_borders = root
						NOT = {
							is_at_war_with = root
						}
					}
				}
			}
			solar_system = {
				random_system_megastructure = {
					limit = {
						is_megastructure_type = uf_mobile_portal
					}
					remove_megastructure = this
				}
				prev = {
					save_event_target_as = portal_entity
					create_fleet = {
						name = "NAME_uf_mobile_portal"
						effect = {
							set_owner = root
							set_location = event_target:portal_entity
							create_ship = {
								random_existing_design = uf_mobile_portal
								graphical_culture = owner
								prefix = yes
							}
						}
						settings = {
							can_change_composition = no
							can_change_leader = no
							spawn_debris = no
							ai_ignore_strength = yes
						}
					}
					delete_fleet = {
						target = this
						destroy_template = yes
					}
				}
			}
		}
	}
}

event = {
	id = uf_ship.13
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_megastructure = {
			OR = {
				is_megastructure_type = uf_mobile_portal
				is_megastructure_type = uf_mobile_portal_temp
			}
		}
	}
	immediate = {
		random_megastructure = {
			limit = {
				OR = {
					is_megastructure_type = uf_mobile_portal
					is_megastructure_type = uf_mobile_portal_temp
				}
			}
			random_country = {
				limit = {
					PREV = {
						has_megastructure_flag = uf_portal@PREV
					}
				}
				country_event = {
					id = uf_ship.14
					days = 1
				}
			}
		}
	}
}

# 月检+读档，检测空间站是否被蠢驴移除
country_event = {
	id = uf_ship.14
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_united_fleet
	}
	immediate = {
		every_megastructure = {
			limit = {
				has_megastructure_flag = uf_portal@root
				OR = {
					is_megastructure_type = uf_mobile_portal
					is_megastructure_type = uf_mobile_portal_temp
				}
			}
			set_owner = root
			if = {
				limit = {
					solar_system = {
						NOT = {
							any_fleet_in_system = {
								has_fleet_flag = uf_portal_entity_fleet
							}
						}
					}
				}
				create_fleet = {
					name = "NAME_uf_portal_entity"
					effect = {
						set_owner = root
						set_location = {
							target = prev
							angle = 135
						}
						create_ship = {
							design = "NAME_UF_Portal"
							graphical_culture = owner
							prefix = yes
						}
						create_ship = {
							design = "NAME_UF_Portal2"
							graphical_culture = owner
							prefix = yes
						}
						set_fleet_flag = uf_portal_entity_fleet
						set_event_locked = yes
					}
					settings = {
						can_change_composition = no
						can_change_leader = no
						can_disband = no
						can_upgrade = no
						spawn_debris = no
						ai_ignore_strength = yes
					}
				}
			}
		}
	}
}

#科研工程船
country_event = {
	id = uf_ship.15
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		FROMFROM = {
			is_ship_size = uf_science
		}
		NOT = {
			has_policy_flag = uf_science_ship_not_allowed_flag
		}
		has_country_resource = {
			type = alloys
			amount >= 80
		}
		has_country_resource = {
			type = influence
			amount >= 50
		}
		NOT = {
			from = {
				any_system = {
					distance = {
						source = from
						min_jumps = 1
						max_jumps = 1
						type = hyperlane
						use_bypasses = no
					}
					exists = owner
					owner = {
						OR = {
							is_wg_fallen_empire = yes
							is_sh_fallen_empire = yes
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
							is_country_type = wg_awakened_fallen_empire
						}
						has_ethic = ethic_fanatic_xenophobe
					}
				}
			}
		}
	}
	immediate = {
		add_resource = {
			alloys = -80
		}
		add_resource = {
			influence = -50
		}
		from = {
			create_starbase = {
				size = starbase_outpost
				owner = root
			}
			every_system_planet = {
				if = {
					limit = {
						has_deposit_for = shipclass_mining_station
						has_mining_station = no
					}
					create_mining_station = {
						owner = root
					}
				}
				if = {
					limit = {
						has_deposit_for = shipclass_research_station
						has_research_station = no
					}
					create_research_station = {
						owner = root
					}
				}
			}
		}
	}
}
