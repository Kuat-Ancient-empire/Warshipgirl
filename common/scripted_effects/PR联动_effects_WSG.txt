PR_eft_plnt_JOB_deposit_KDC = {
	optimize_memory
	PR_eft_plnt_JOB_deposit_KDC_gray = yes
	PR_eft_plnt_JOB_deposit_WSG = yes
}
PR_eft_plnt_JOB_deposit_WSG = {
	optimize_memory
	if = {
		limit = {
			OR = {
				AND = { exists = owner		 owner = { is_gestalt = no } }
				check_modifier_value = { modifier = PR_smod_plnt_JOB_deposit_WSG value > 0 }
			}
		}
		##########################################################################
		## 舰娘
		##########################################################################
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_moyu }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = hot_seal }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_pantsu_maker }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_neo_producer }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = barthroom_worker }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_gas_refiner }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_chemist }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_translucer }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_foundry }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_alpha }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_researcher }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_soldier }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_mahjong }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wg_tourism }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = dyson_ring_researcher }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sunflower_foundry }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sep_artisan }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_senergy }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sep_foundry }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_rare_resource_manufacturer }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = wsg_shop_pantsu_collector }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = dyson_ring_roller_coaster }
		##########################################################################
		## 深海
		##########################################################################
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_fe_factorer }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_fe_protector }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_clerk }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_pantsu_maker }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_foundry }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_foundry_shpc }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_senergy }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_soldier }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_pool }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = sh_researcher }
		##########################################################################
		## 联合
		##########################################################################
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_evolver }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_entertainer }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_food_writer }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_researcher }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_hm}
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_hm_alloys }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_rare_resource }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_admin }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_hm_soldier }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_archaeologist }
		PR_prmt_eft_plnt_JOB_deposit_DB = { JOB = uf_administrator }
	}
}
# 由于纳米转化岗位需要需要多个岗位以兼容不同mod
# 多个岗位同用一个触发以节省资源
# 输入：JOB = 子级岗位 PARENT_JOB = 父级岗位
# 触发将会检查子级岗位，并将子级岗位所属的父级岗位替换为父级岗位的地块
# PR_prmt_eft_plnt_JOB_deposit_DB_sub_job = {
# 	##	|岗位数|不为1
# 	if = {
# 		limit = {
# 			OR = {
# 				check_modifier_value = { modifier = job_$JOB$_add		 value > @common_MAX }		# |岗位数|多
# 				AND = {
# 					check_modifier_value = { modifier = job_$JOB$_add		 value < @common_MAX }	# |岗位数|少+|存在岗位地块|		证明被"岗位地块"额外转化了
# 					has_deposit = PR_D_JOB_$PARENT_JOB$
# 				}
# 			}
# 		}
# 		##	FACTOR_INIT		既没有"岗位地块"和|岗位FACTOR|不同时存在,则不存在来自|岗位FACTOR|对num_job的影响
# 		if = {
# 			limit = {
# 				NAND = {
# 					is_variable_set = PR_FACTOR_plnt_JOB_$PARENT_JOB$
# 					has_deposit = PR_D_JOB_$PARENT_JOB$
# 				}
# 			}
# 			set_variable = { which = PR_FACTOR_plnt_JOB_$PARENT_JOB$		 value = 0 }
# 		}
		
# 		##	FACTOR_DB
# 		change_variable = { which = PR_FACTOR_plnt_JOB_$PARENT_JOB$		 value = modifier:job_$JOB$_add }	# 当前岗位|总ADD|
# 		subtract_variable = { which = PR_FACTOR_plnt_JOB_$PARENT_JOB$		 value = @common_MAX }	# 当前岗位需要的FACTOR=|总ADD|-1
# 		##	地块DB
# 		#	需要削减|岗位ADD|	=保证"岗位"与|岗位FACTOR|同时存在
# 		if = { limit = { check_variable = { which = PR_FACTOR_plnt_JOB_$PARENT_JOB$		 value > 0 } }
# 			#	岗位地块INIT
# 			if = { limit = { NOT = { has_deposit = PR_D_JOB_$PARENT_JOB$ } }
# 				add_deposit = PR_D_JOB_$PARENT_JOB$
# 			}
# 			#	岗位地块BUG检测
# 			if = { limit = { NOT = { has_deposit = PR_D_JOB_$PARENT_JOB$ } }
# 				log_error = "PR_JOB_ERROR: $JOB$, parent job$PARENT_JOB$"
# 				set_global_flag = PR_flg_glbl_JOB_ERROR
# 			}
# 		}
# 		#	无需削减|岗位ADD|	=清除"岗位"与|岗位FACTOR|
# 		else = {
# 			if = { limit = { has_deposit = PR_D_JOB_$PARENT_JOB$ }						remove_deposit = PR_D_JOB_$PARENT_JOB$ }
# 			clear_variable = PR_FACTOR_plnt_JOB_$PARENT_JOB$
# 		}
# 	}
# }