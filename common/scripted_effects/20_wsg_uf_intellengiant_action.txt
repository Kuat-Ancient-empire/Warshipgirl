@uf_jumpdrive_effect_scale = 0.05
@uf_ge_fleet_jumpdrive_to_target_distance = 200
#ETERNAL AND CONTRACTOR ACTION
uf_exe_invasion_jump_drive_planet_action  = {
	random_list = {
		99 = {  
			modifier = { 
				set = 0 
				root = { has_fleet_flag = monolith_attack_fleet }
			}
			prevprev = { 
				auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } 
			}
		}
		99 = {  
			modifier = { 
				set = 0 
				root = { NOT = { has_fleet_flag = monolith_attack_fleet } }
			}
			prevprev = { 
				auto_move_to_planet = { 
					target = prev 
					arrival_effect = monilith_crisis_destroy_planet 
					clear_auto_move_on_arrival = no 
				} 
			}
		}
		1 = {
			modifier = {
				set = 0
				prevprev = { any_owned_ship = { has_ship_flag = uf_jump_drive_cooldown } }
			}
			modifier = {
				set = 0
				root = { has_fleet_flag = monolith_attack_fleet }
			}
			prevprev = {
				set_location = { target = prev distance = 300 angle = random }
				every_owned_ship = { 
					create_ambient_object = {
						type = horror_spawn_object
						location = this
						use_3d_location = yes
						entity_offset = { min = 0 max = 0 }
						entity_offset_angle = { min = 0 max = 0 }
						entity_offset_height = { min = 0 max = 0 }
						entity_scale_to_size = yes
						scale = @uf_jumpdrive_effect_scale
					}
				}
				while = {
					limit = { any_owned_ship = { NOT = { has_ship_flag = uf_jump_drive_cooldown } } }
					random_owned_ship = {
						limit = { NOT = { has_ship_flag = uf_jump_drive_cooldown } }
						set_timed_ship_flag = { flag = uf_jump_drive_cooldown days = 200 }
						add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
					}
				}
				auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
			}
		}
		1 = {
			modifier = {
				set = 0
				prevprev = { any_owned_ship = { has_ship_flag = uf_jump_drive_cooldown } }
			}
			modifier = {
				set = 0
				root = { NOT = { has_fleet_flag = monolith_attack_fleet } }
			}
			prevprev = {
				set_location = { target = prev distance = 300 angle = random }
				every_owned_ship = { 
					create_ambient_object = {
						type = horror_spawn_object
						location = this
						use_3d_location = yes
						entity_offset = { min = 0 max = 0 }
						entity_offset_angle = { min = 0 max = 0 }
						entity_offset_height = { min = 0 max = 0 }
						entity_scale_to_size = yes
						scale = @uf_jumpdrive_effect_scale
					}
				}
				while = {
					limit = { any_owned_ship = { NOT = { has_ship_flag = uf_jump_drive_cooldown } } }
					random_owned_ship = {
						limit = { NOT = { has_ship_flag = uf_jump_drive_cooldown } }
						set_timed_ship_flag = { flag = uf_jump_drive_cooldown days = 200 }
						add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
					}
				}
				auto_move_to_planet = { 
					target = prev 
					arrival_effect = monilith_crisis_destroy_planet 
					clear_auto_move_on_arrival = no 
				}
			}
		}
	}
}

uf_exe_invasion_jump_drive_fleet_action  = {
	random_list = {
		99 = { prevprev = { 
			auto_follow_fleet = { target = prev.fleet attack_fleet = yes } 
		} }
		1 = {
			modifier = {
				factor = 0
				prevprev = { any_owned_ship = { has_ship_flag = uf_jump_drive_cooldown } }
			}
			prevprev = {
				set_location = { target = prev.fleet distance = @uf_ge_fleet_jumpdrive_to_target_distance angle = random }
				every_owned_ship = { 
					create_ambient_object = {
						type = horror_spawn_object
						location = this
						use_3d_location = yes
						entity_offset = { min = 0 max = 0 }
						entity_offset_angle = { min = 0 max = 0 }
						entity_offset_height = { min = 0 max = 0 }
						entity_scale_to_size = yes
						scale = @uf_jumpdrive_effect_scale
					}
				}
				while = {
					limit = { any_owned_ship = { NOT = { has_ship_flag = uf_jump_drive_cooldown } } }
					random_owned_ship = {
						limit = { NOT = { has_ship_flag = uf_jump_drive_cooldown } }
						set_timed_ship_flag = { flag = uf_jump_drive_cooldown days = 200 }
						add_modifier = { modifier = "jump_drive_cooldown" days = 200 }
					}
				}
				auto_follow_fleet = { target = prev.fleet attack_fleet = yes }
			}
		}
	}
}

#paramater : ID(EVENT) TYPE OWNER(CRISIS)
uf_exe_invasion_fleet_wandering_action = {
	optimize_memory
	clear_orders = yes
	clear_fleet_actions = this
	random_list = {
		#周围星系随机设置目标
		95 = {
			solar_system = { random_neighbor_system = {
				limit = { prevprev = { can_access_system = prev } }
				save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
			} }
			if = {
				limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
				event_target:$TYPE$_invasion_fleet_wandering_action_target = {
					system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
				}
			} 
			else_if = {
				limit = { any_system = {
					prev = { can_access_system = prev }
				} }
				random_system = {
					limit = { prev = { can_access_system = prev } }
					save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
				}
				event_target:$TYPE$_invasion_fleet_wandering_action_target = {
					system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
				}
			}
			else = { 
				log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
				change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
				fleet_event = { id = $ID$ days = 32 random = 5 } 
			}
		}
		#找任意一个敌对目标，紧急跃迁，不需要debuff 不是黑石头
		5 = {
			modifier = { 
				set = 0 
				root = { has_fleet_flag = monolith_attack_fleet }
			}
			modifier = { 
				mult = 0
				any_owned_ship = { has_ship_flag = uf_jump_drive_cooldown } 
			}
			modifier = {
				mult = $TYPE$_fleet_none_target_var
				is_variable_set = $TYPE$_fleet_none_target_var
			}
			clear_variable = $TYPE$_fleet_none_target_var
			random_system = {
				limit = {
					NOT = { is_same_value = prev.solar_system }
					OR = {
						any_system_planet = { uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
						any_ship_in_system = { uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
					}
				}
				save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
			}
			if = {
				limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
				event_target:$TYPE$_invasion_fleet_wandering_action_target = {
					random_system_planet = {
						limit = { is_primary_star = yes }
						prevprev = {
							set_location = { target = prev distance = 300 angle = random }
							every_owned_ship = { 
								create_ambient_object = {
									type = horror_spawn_object
									location = this
									use_3d_location = yes
									entity_offset = { min = 0 max = 0 }
									entity_offset_angle = { min = 0 max = 0 }
									entity_offset_height = { min = 0 max = 0 }
									entity_scale_to_size = yes
									scale = @uf_jumpdrive_effect_scale
								}
							}
							auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
						}
					}
				}
			} 
			else = {
				solar_system = { random_neighbor_system = {
					limit = { prevprev = { can_access_system = prev } }
					save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
				} }
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
					event_target:$TYPE$_invasion_fleet_wandering_action_target = {
						system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
					}
				} 
				else_if = {
					limit = { any_system = {
						prev = { can_access_system = prev }
					} }
					random_system = {
						limit = { prev = { can_access_system = prev } }
						save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
					}
					event_target:$TYPE$_invasion_fleet_wandering_action_target = {
						system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
					}
				}
				else = { 
					log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
					change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
					fleet_event = { id =  $ID$ days = 32 random = 5 } 
				}
			}
		}
		#找任意一个敌对目标，紧急跃迁，不需要debuff 就是黑石头
		5 = {
			modifier = { 
				set = 0 
				root = { NOT = { has_fleet_flag = monolith_attack_fleet } }
			}
			modifier = { 
				mult = 0
				any_owned_ship = { has_ship_flag = uf_jump_drive_cooldown } 
			}
			modifier = {
				mult = $TYPE$_fleet_none_target_var
				is_variable_set = $TYPE$_fleet_none_target_var
			}
			clear_variable = $TYPE$_fleet_none_target_var
			random_system = {
				limit = {
					NOT = { is_same_value = prev.solar_system }
					monolith_target_system_trigger = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
				}
				save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
			}
			if = {
				limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
				event_target:$TYPE$_invasion_fleet_wandering_action_target = {
					random_system_planet = {
						limit = { is_primary_star = yes }
						prevprev = {
							set_location = { target = prev distance = 300 angle = random }
							every_owned_ship = { 
								create_ambient_object = {
									type = horror_spawn_object
									location = this
									use_3d_location = yes
									entity_offset = { min = 0 max = 0 }
									entity_offset_angle = { min = 0 max = 0 }
									entity_offset_height = { min = 0 max = 0 }
									entity_scale_to_size = yes
									scale = @uf_jumpdrive_effect_scale
								}
							}
							auto_move_to_planet = { 
								target = prev 
								arrival_effect = monilith_crisis_building_the_starbase 
								clear_auto_move_on_arrival = no 
							}
						}
					}
				}
			} 
			else = {
				solar_system = { random_neighbor_system = {
					limit = { prevprev = { can_access_system = prev } }
					save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
				} }
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_wandering_action_target }
					event_target:$TYPE$_invasion_fleet_wandering_action_target = {
						system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
					}
				} 
				else_if = {
					limit = { any_system = {
						prev = { can_access_system = prev }
					} }
					random_system = {
						limit = { prev = { can_access_system = prev } }
						save_event_target_as = $TYPE$_invasion_fleet_wandering_action_target
					}
					event_target:$TYPE$_invasion_fleet_wandering_action_target = {
						system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } }
					}
				}
				else = { 
					log = "跃迁强度：[$TYPE$_fleet_none_target_var]"
					change_variable = { which = $TYPE$_fleet_none_target_var value = 1 }
					fleet_event = { id =  $ID$ days = 32 random = 5 } 
				}
			}
		}
	}
}

#paramater : ID(EVENT) TYPE OWNER(CRISIS)
uf_exe_invasion_fleet_action = {
	optimize_memory
	# 寻找所在星系目前没有己方单位的敌对星球
	if = {
		limit = {
			root = {
				NOT = { has_fleet_flag = monolith_attack_fleet }
				exists = solar_system
				solar_system = {
					any_system_planet = { uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
				}
			}
		}
		root = {
			solar_system = {
				random_system_planet = {
					limit = {
						uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
					}
					prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } }
				}
			}
		}
	}
	# 寻找所在星系内敌对军事舰船
	else_if = {
		limit = {
			root = {
				NOT = { has_fleet_flag = monolith_attack_fleet }
				exists = solar_system
				solar_system = { any_ship_in_system = {
					uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
				} }
			}
		}
		root = {
			solar_system = {
				random_ship_in_system = {
					limit = {
						uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
					}
					prevprev = { auto_follow_fleet = { target = prev.fleet attack_fleet = yes } }
				}
			}
		}
	}
	# 寻找所在星系内目标黑石
	else_if = {
		limit = {
			root = {
				has_fleet_flag = monolith_attack_fleet
				exists = solar_system
				solar_system = { any_system_planet = { monolith_target_planet_trigger = yes } }
			}
		}
		root = {
			solar_system = {
				random_system_planet = {
					limit = { monolith_target_planet_trigger = yes }
					prevprev = {  
						auto_move_to_planet = { 
							target = prev 
							arrival_effect = monilith_crisis_destroy_planet
							clear_auto_move_on_arrival = no 
						}
					}
				}
			}
		}
	}
	# 自主行为启动
	else = {
		random_list = {
			# 黑石头的寻路
			25 = {
				modifier = {
					set = 0
					root = { NOT = { has_fleet_flag = monolith_attack_fleet } }
				}
				#开始找目标
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						monolith_target_system_trigger = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = { monolith_target_planet_trigger = yes }
							}
							random_system_planet = {
								limit = {
									monolith_target_planet_trigger = yes
								}
								uf_exe_invasion_jump_drive_planet_action = yes
							}
						} 
						else = { system_star = { prevprev = {  
							auto_move_to_planet = { 
								target = prev 
								arrival_effect = monilith_crisis_building_the_starbase 
								clear_auto_move_on_arrival = no 
							}
						} } }
					}
				} 
				#找不到目标，再找一次
				else = {
					#开始找目标
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							monolith_target_system_trigger = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = { monolith_target_planet_trigger = yes }
								}
								random_system_planet = {
									limit = {
										monolith_target_planet_trigger = yes
									}
									uf_exe_invasion_jump_drive_planet_action = yes
								}
							} 
							else = { system_star = { prevprev = {  
								auto_move_to_planet = { 
									target = prev 
									arrival_effect = monilith_crisis_building_the_starbase 
									clear_auto_move_on_arrival = no 
								}
							} } }
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { uf_exe_invasion_fleet_wandering_action = { ID = $ID$  TYPE = $TYPE$  OWNER = $OWNER$  OWNER_2 = $OWNER_2$ } }
				}
			}
			25 = {
				modifier = {
					set = 0
					root = { NOT = { has_fleet_flag = monolith_attack_fleet } }
				}
				# 25%概率去找10跳以内的空间站或者星球舰队
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						monolith_target_system_trigger = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = { monolith_target_planet_trigger = yes }
							}
							random_system_planet = {
								limit = {
									monolith_target_planet_trigger = yes
								}
								uf_exe_invasion_jump_drive_planet_action = yes
							}
						} 
						else = { system_star = { prevprev = {  
							auto_move_to_planet = { 
								target = prev 
								arrival_effect = monilith_crisis_building_the_starbase 
								clear_auto_move_on_arrival = no 
							}
						} } }
					}
				} 
				#找不到目标，再找一次
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							monolith_target_system_trigger = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = { monolith_target_planet_trigger = yes }
								}
								random_system_planet = {
									limit = {
										monolith_target_planet_trigger = yes
									}
									uf_exe_invasion_jump_drive_planet_action = yes
								}
							} 
							else = { system_star = { prevprev = {  
								auto_move_to_planet = { 
									target = prev 
									arrival_effect = monilith_crisis_building_the_starbase 
									clear_auto_move_on_arrival = no 
								}
							} } }
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { uf_exe_invasion_fleet_wandering_action = { ID = $ID$  TYPE = $TYPE$  OWNER = $OWNER$  OWNER_2 = $OWNER_2$ } }
				}
			}
			# 不是黑石头的寻路
			25 = {
				modifier = {
					set = 0
					root = { has_fleet_flag = monolith_attack_fleet }
				}
				#开始找目标
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						any_system_planet = { uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = { uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
							}
							random_system_planet = {
								limit = {
									uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
								}
								uf_exe_invasion_jump_drive_planet_action = yes
							}
						} 
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				} 
				#找不到目标，再找一次
				else = {
					#开始找目标
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							any_system_planet = { uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
									}
								}
								random_system_planet = {
									limit = {
										uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
									}
									uf_exe_invasion_jump_drive_planet_action = yes
								}
							} 
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { uf_exe_invasion_fleet_wandering_action = { ID = $ID$  TYPE = $TYPE$  OWNER = $OWNER$  OWNER_2 = $OWNER_2$ } }
				}
			}
			25 = {
				modifier = {
					set = 0
					root = { has_fleet_flag = monolith_attack_fleet }
				}
				# 25%概率去找10跳以内的空间站或者星球舰队
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						any_system_planet = {
							uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				#如果不具备就直接飞过去QWQ（bushi）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						if = {
							limit = {
								any_system_planet = {
									uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
								}
							}
							random_system_planet = {
								limit = {
									uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
								}
								uf_exe_invasion_jump_drive_planet_action = yes
							}
						} 
						else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
					}
				} 
				#找不到目标，再找一次
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							any_system_planet = {
								uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					#如果不具备就直接飞过去QWQ（bushi）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							if = {
								limit = {
									any_system_planet = {
										uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
									}
								}
								random_system_planet = {
									limit = {
										uf_standard_system_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
									}
									uf_exe_invasion_jump_drive_planet_action = yes
								}
							} 
							else = { system_star = { prevprev = { auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes } } } }
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { uf_exe_invasion_fleet_wandering_action = { ID = $ID$  TYPE = $TYPE$  OWNER = $OWNER$  OWNER_2 = $OWNER_2$ } }
				}
			}
			25 = {
				modifier = {
					set = 0
					root = { has_fleet_flag = monolith_attack_fleet }
				}
				# 25%概率找50跳内未停用的敌对舰船
				closest_system = {
					max_steps = 50
					limit = {
						NOT = { is_same_value = root.solar_system }
						any_ship_in_system = {
							uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						random_ship_in_system = {
							limit = {
								uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
							}
							uf_exe_invasion_jump_drive_fleet_action = yes
						}
					}
				} 
				#找不到目标，再找一次
				else = {
					closest_system = {
						max_steps = 50
						limit = {
							NOT = { is_same_value = root.solar_system }
							any_ship_in_system = {
								uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							random_ship_in_system = {
								limit = {
									uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
								}
								uf_exe_invasion_jump_drive_fleet_action = yes
							}
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { uf_exe_invasion_fleet_wandering_action = { ID = $ID$  TYPE = $TYPE$  OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
				}
			}
			25 = {
				modifier = {
					set = 0
					root = { has_fleet_flag = monolith_attack_fleet }
				}
				# 25%概率找10跳内未停用的敌对舰船
				random_system = {
					limit = {
						NOT = { is_same_value = root.solar_system }
						distance = {
							source = root.solar_system
							type = hyperlane
							use_bypasses = yes
							min_jumps = 1
							max_jumps = 10
						}
						any_ship_in_system = {
							uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
						}
						prev = { can_access_system = prev }
					}
					save_event_target_as = $TYPE$_invasion_fleet_action_target
				}
				#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
				if = {
					limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
					event_target:$TYPE$_invasion_fleet_action_target = {
						random_ship_in_system = {
							limit = {
								uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
							}
							uf_exe_invasion_jump_drive_fleet_action = yes
						}
					}
				} 
				#找不到目标，再找一次
				else = {
					random_system = {
						limit = {
							NOT = { is_same_value = root.solar_system }
							distance = {
								source = root.solar_system
								type = hyperlane
								use_bypasses = yes
								min_jumps = 1
								max_jumps = 10
							}
							any_ship_in_system = {
								uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
							}
						}
						save_event_target_as = $TYPE$_invasion_fleet_action_target
					}
					#如果星系内具备有效目标，就80%概率走过去，20%概率飞过去（飞过去必须吃debuff）
					if = {
						limit = { exists = event_target:$TYPE$_invasion_fleet_action_target }
						event_target:$TYPE$_invasion_fleet_action_target = {
							random_ship_in_system = {
								limit = {
									uf_standard_ship_target_triggers = { OWNER = $OWNER$ OWNER_2 = $OWNER_2$ }
								}
								uf_exe_invasion_jump_drive_fleet_action = yes
							}
						}
					} 
					#找不到目标，摆烂了，开始转圈
					else = { uf_exe_invasion_fleet_wandering_action = { ID = $ID$  TYPE = $TYPE$  OWNER = $OWNER$ OWNER_2 = $OWNER_2$ } }
				}
			}
		}
	}
}