
#创造无畏舰总督
create_wsg_automated_dreadnought_official = {
	optimize_memory
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_warship_active }
		remove_country_flag = wsg_automated_dreadnought_warship_active
		event_target:wsg_automated_dreadnought_warship_ship = { delete_ship = this }		#删除无畏舰母舰
	}
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_army_active }
		remove_country_flag = wsg_automated_dreadnought_army_active
		every_owned_army = {
			limit = { army_type = wsg_automated_dreadnought_army }
			remove_army = yes
		}
	}
	set_country_flag = wsg_automated_dreadnought_official_active
	create_leader = {							#创建无畏舰总督
		class = official
		species = event_target:wsg_automated_dreadnought_species
		name = "NAME_wsg_automated_dreadnought"
		skip_background_generation = yes
		custom_catch_phrase = wsg_automated_dreadnought_catch_phrase
		custom_description = wsg_automated_dreadnought_backstory
		background_ethic = ethic_gestalt_consciousness
		gender = female
		immortal = yes
		event_leader = yes
		skill = 1
		set_age = 7 #——800000
		traits = {
			trait = leader_trait_legend_sh
			trait = leader_trait_wsg_automated_dreadnought1
			trait = leader_trait_wsg_automated_dreadnought2
		}
		effect = {
			set_leader_flag = not_has_wg_affection_normal
			set_leader_flag = immune_to_negative_traits
			save_global_event_target_as = wsg_automated_dreadnought_official
			change_leader_portrait = wsg_automated_dreadnought_0
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = wsg_automated_dreadnought_official
			# set_leader_flag = has_gained_level_trait
			set_leader_flag = wsg_automated_dreadnought_leader
			if = {
				limit = { owner = { has_country_flag = wsg_mist }}
				add_trait = { trait = leader_trait_mist show_message = no }
			}
			else_if = {
				limit = { owner = { has_country_flag = project_s_finish }}
				add_trait = { trait = leader_trait_warshipgirls2 show_message = no }
			}
			else_if = {
				limit = { owner = { has_ascension_perk = ap_shenhai_silent }}
				add_trait = { trait = leader_trait_shenhai1 show_message = no }
			}
			else_if = {
				limit = { owner = { has_ascension_perk = ap_shenhai_icebreaking }}
				add_trait = { trait = leader_trait_shenhai2 show_message = no }
			}
		}
	}
	random_owned_leader = {
		limit = { has_leader_flag = wsg_automated_dreadnought_official }
		leader_event = {
			id = wg_affection.8 days = 1
		}
		add_skill_without_trait_selection = 10
		set_wsg_automated_dreadnought_portrait = yes
	}
}
# 创建无畏舰战舰
create_wsg_automated_dreadnought_warship = {
	optimize_memory
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_official_active }
		remove_country_flag = wsg_automated_dreadnought_official_active
		event_target:wsg_automated_dreadnought_official = {
			kill_leader = { fire = yes show_notification = no }
		}
	}
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_army_active }
		if = {
			limit = {
				any_owned_army = {
					army_type = wsg_automated_dreadnought_army
					exists = planet
				}
			}
			random_owned_army = {
				limit = { army_type = wsg_automated_dreadnought_army }
				planet = { save_event_target_as = wsg_automated_dreadnought_warship_location }
			}
		}
		else = {
			random_owned_army = {
				limit = { army_type = wsg_automated_dreadnought_army }
				fleet = { save_event_target_as = wsg_automated_dreadnought_warship_location }
			}
		}
	}
	else_if = {
		limit = { has_country_flag = wsg_automated_dreadnought_official_active }
		if = {
			limit = { any_owned_planet = {
				exists = leader
				leader = { has_leader_flag = wsg_automated_dreadnought_official }
			}}
			random_owned_planet = {
				limit = {
					exists = leader
					leader = { has_leader_flag = wsg_automated_dreadnought_official }
				}
				save_event_target_as = wsg_automated_dreadnought_warship_location
			}
		} else = {
			capital_scope = {
				save_event_target_as = wsg_automated_dreadnought_warship_location
			}
		}
	} 
	else = {
		capital_scope = { save_event_target_as = wsg_automated_dreadnought_warship_location }
	}
	set_country_flag = wsg_automated_dreadnought_warship_active
	create_fleet = {
		name = "NAME_wsg_automated_dreadnought"
		settings = {
			can_upgrade = no						#是否可以升级
			can_change_composition = no			#是否可以改变舰队结构
			can_disband = no
			can_change_leader = no					#是否可以更换领袖
			uses_naval_capacity = no				#使用舰队容量
			spawn_debris = no						#产生残骸
		}
		effect = {
			set_owner = root
			set_fleet_flag = wg_event_limit_fleet
			create_ship = {
				name = "NAME_wsg_automated_dreadnought"
				design = "NAME_wsg_Automated_Dreadnought_lambda"
				graphical_culture = "npf_01"
				prefix = no
				upgradable = no
				effect = {
					save_global_event_target_as = wsg_automated_dreadnought_warship_ship
				}
			}
			set_fleet_flag = wsg_automated_dreadnought_fleet
			save_global_event_target_as = wsg_automated_dreadnought_warship
			set_location = event_target:wsg_automated_dreadnought_warship_location
			add_modifier = { modifier = remove_fleet_maintenance }
		}
	}
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_army_active }
		remove_country_flag = wsg_automated_dreadnought_army_active
		every_owned_army = {
			limit = { army_type = wsg_automated_dreadnought_army }
			if = {
				limit = { exists = leader }
				unassign_leader = leader
			}
			remove_army = yes
		}
	}
}
#创造无畏舰地面单位
create_wsg_automated_dreadnought_army = {
	optimize_memory
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_official_active }
		remove_country_flag = wsg_automated_dreadnought_official_active
		event_target:wsg_automated_dreadnought_official = { kill_leader = { show_notification = no } }
	}
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_warship_active }
		event_target:wsg_automated_dreadnought_warship = { save_event_target_as = wsg_automated_dreadnought_transport_location }
	}
	else_if = {
		limit = { has_country_flag = wsg_automated_dreadnought_official_active }
		if = {
			limit = { any_owned_planet = {
				exists = leader
				leader = { has_leader_flag = wsg_automated_dreadnought_official }
			}}
			random_owned_planet = {
				limit = {
					exists = leader
					leader = { has_leader_flag = wsg_automated_dreadnought_official }
				}
				save_event_target_as = wsg_automated_dreadnought_warship_location
			}
		} else = {
			capital_scope = {
				save_event_target_as = wsg_automated_dreadnought_warship_location
			}
		}
	} 
	else = {
		capital_scope = { save_event_target_as = wsg_automated_dreadnought_transport_location }
	}
	set_country_flag = wsg_automated_dreadnought_army_active
	create_fleet = {
		name = "NAME_wsg_automated_dreadnought"
		effect = {
			set_owner = root
			create_army_transport = {
				species = event_target:wsg_automated_dreadnought_owner
				ship_name = "NAME_wsg_automated_dreadnought"
				#graphical_culture = "root"
				army_name = "NAME_wsg_automated_dreadnought"
				army_type = "wsg_automated_dreadnought_army"
			}
			set_location = {
				target = event_target:wsg_automated_dreadnought_transport_location
				distance = 0
				angle = random 
			}
		}
	}
	if = {
		limit = { has_country_flag = wsg_automated_dreadnought_warship_active }
		remove_country_flag = wsg_automated_dreadnought_warship_active
		event_target:wsg_automated_dreadnought_warship_ship = { delete_ship = this }
	}
}

# scope: leader
set_wsg_automated_dreadnought_portrait = {
	optimize_memory
	if = {
		limit = { owner = { 
			OR = {
				has_wg_special_authority = yes
				has_global_flag = wg_cheat_all_clothes
			}
			check_variable = { which = wg_wsg_automated_dreadnought_cloth value = 1 }
		}}
		change_leader_portrait = wsg_automated_dreadnought_0
	} else_if = {
		limit = { owner = { 
			check_variable = { which = wg_wsg_automated_dreadnought_cloth value = 2 }
		}}
		change_leader_portrait = wsg_automated_dreadnought_0
	} else_if = {
		limit = { owner = { 
			check_variable = { which = wg_wsg_automated_dreadnought_cloth value = 3 }
		}}
		change_leader_portrait = wsg_automated_dreadnought_0
	} else_if = {
		limit = { owner = { 
			check_variable = { which = wg_wsg_automated_dreadnought_cloth value = 4 }
		}}
		change_leader_portrait = wsg_automated_dreadnought_0
	} else_if = {
		limit = { owner = { 
			check_variable = { which = wg_wsg_automated_dreadnought_cloth value = 5 }
		}}
		change_leader_portrait = wsg_automated_dreadnought_0
	}else_if = {
		limit = { owner = { 
			check_variable = { which = wg_wsg_automated_dreadnought_cloth value = 6 }
		}}
		change_leader_portrait = wsg_automated_dreadnought_0
	} else_if = {
		limit = { always = yes }
		change_leader_portrait = wsg_automated_dreadnought_0
	}
}

reset_wsg_automated_dreadnought_cloth = {
	optimize_memory
	if = {
		limit = { 
			NOR = { 
				has_wg_special_authority = yes
				has_global_flag = wg_cheat_all_clothes
			}
			check_variable = { which = wg_wsg_automated_dreadnought_cloth value = 1 }
		}
		set_variable = { which = wg_wsg_automated_dreadnought_cloth value = 1 }
	}
}
