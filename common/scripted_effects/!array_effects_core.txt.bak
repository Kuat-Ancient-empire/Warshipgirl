# METHODS 函数表
# WARNING：All the variables use in this effect must be in the same scope, 
# or otherwise the method will not able to read the data correctly
# 警告：所有变量必须处于同一个值域（SCOPE），否则以下脚本方法将不能读取数据
# 
####################################################################################
# new_array = { ARRAY, SIZE, i0~i9 }
# 
# creates a new array 创建一个新数组
# input: 
# ARRAY - name of the array # 数组名
# SIZE - size of the array # 数组大小
# i0 to i9 - value of the numbers in array # 数组内的数值
####################################################################################
# get_digits = { ARRAY, VARIABLE }
# 
# 将变量值转换成一个数列 （个位数，10位数，百位数，千位数），用于函数读取变量值
# convert variable value into readable digits in form of arrays
# INPUT: VARIABLE # 需要转换的变量
# OUTPUT: ARRAY, can be same as VARIABLE # 转换成的数列名，可与VARIABLE 重复
####################################################################################
# get_array = { ARRAY, INDEX, OUT }
# 
# 将数组内指定索引的值复制到指定的变量中
# copy the value in an array at the given index to the specific variable
# input: ARRAY 数组名, INDEX 索引（整数）
# output: OUT(variable name)# 变量名(输出)

####################################################################################
# get_array_variable = { ARRAY, VARIABLE, OUT }
# 
# 将数组内指定索引（数值为一个变量）储存的值复制到指定的变量中
# copy the value in an array at the given index (referred to an variable) to the specific variable
# input: ARRAY 数组名, VARIABLE(variable name) # 变量名(输入)
# output: OUT(variable name) # 变量名(输出)


new_array = {
	set_variable = {
		which = $ARRAY$
		value = $SIZE$
	}
	[[i0] set_variable = { which = $ARRAY$_0 value = $i0$ }]
	[[i1] set_variable = { which = $ARRAY$_1 value = $i1$ }]
	[[i2] set_variable = { which = $ARRAY$_2 value = $i2$ }]
	[[i3] set_variable = { which = $ARRAY$_3 value = $i3$ }]
	[[i4] set_variable = { which = $ARRAY$_4 value = $i4$ }]
	[[i5] set_variable = { which = $ARRAY$_5 value = $i5$ }]
	[[i6] set_variable = { which = $ARRAY$_6 value = $i6$ }]
	[[i7] set_variable = { which = $ARRAY$_7 value = $i7$ }]
	[[i8] set_variable = { which = $ARRAY$_8 value = $i8$ }]
	[[i9] set_variable = { which = $ARRAY$_9 value = $i9$ }]
}


# convert variable value into readable digits in form of arrays
# will generate a country flag named $ARRAY$_negative if the input value is negative
# INPUT: VARIABLE
# OUTPUT: ARRAY
get_digits = {
	remove_array_variables = yes
	set_variable = { which = $ARRAY$_TEMP value = $VARIABLE$ }
	# if = {
	# 	limit = { check_variable = { which = $ARRAY$_TEMP value < 0 }}
	# 	# set_country_flag = $ARRAY$_negative
	# 	multiply_variable = { which = $ARRAY$_TEMP value = -1 }
	# }
	set_variable = { which = $ARRAY$_DIGITS value = 1 }
	while = { # push the number to decimals until first digit is at the single digit (123 -> 1.23)
		limit = { check_variable = { which = $ARRAY$_TEMP value >= 10 }}
		divide_variable = { which = $ARRAY$_TEMP value = 10 }
		change_variable = { which = $ARRAY$_DIGITS value = 1 }
	}
	if = {
		limit = { NOT = { check_variable = { which = $VARIABLE$ value = 0 }}}
		while = {
			count = $ARRAY$_DIGITS
			set_variable = { which = $ARRAY$_TEMP_INT value = $ARRAY$_TEMP }
			floor_variable = $ARRAY$_TEMP_INT
			change_variable = { which = $ARRAY$_AT_DIGIT value = 1 }
			subtract_variable = { which = $ARRAY$_TEMP value = $ARRAY$_TEMP_INT }
			if = { # save the digit number to another variable
				limit = { check_variable = { which = $ARRAY$_AT_DIGIT value = 1 }}
				set_variable = { which = $ARRAY$_DIGIT_1 value = $ARRAY$_TEMP_INT }
			} else_if = {
				limit = { check_variable = { which = $ARRAY$_AT_DIGIT value = 2 }}
				set_variable = { which = $ARRAY$_DIGIT_2 value = $ARRAY$_TEMP_INT }
			} else_if = {
				limit = { check_variable = { which = $ARRAY$_AT_DIGIT value = 3 }}
				set_variable = { which = $ARRAY$_DIGIT_3 value = $ARRAY$_TEMP_INT }
			} else_if = {
				limit = { check_variable = { which = $ARRAY$_AT_DIGIT value = 4 }}
				set_variable = { which = $ARRAY$_DIGIT_4 value = $ARRAY$_TEMP_INT }
			}
			multiply_variable = { which = $ARRAY$_TEMP value = 10 }
		}
	}
}

remove_array_variables = {
	clear_variable = $ARRAY$_DIGIT_1 
	clear_variable = $ARRAY$_DIGIT_2 
	clear_variable = $ARRAY$_DIGIT_3 
	clear_variable = $ARRAY$_DIGIT_4 
	clear_variable = $ARRAY$_DIGITS 
	clear_variable = $ARRAY$_AT_DIGIT 
	clear_variable = $ARRAY$_TEMP_INT 
	clear_variable = $ARRAY$_TEMP 
}