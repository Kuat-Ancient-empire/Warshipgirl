# called during empire initialization when starting a new game
# scope: country
on_game_start_country = {
	events = {
		wsg.1
		wg_fe.4
		sh.1
		wsgancrel.3
		wsgancrel.1191
		sh.3030
		sh.3034
		sh.3038
		wsg.3111
		wg_origin.3
		sh_fe.4
		wg_parit.19
		wsg.10
		wsg.12001
		wsg.12002
		wsg.3311
		wsg.12003
		wsg.12008
		wsg.3328
		sh.3017
		wg_origin_sh_chaser.1
	}
}

on_game_start = {
	events = {
		#wg_traits.1
		#sh_traits.1
		wg_traits.8
		wsg.3076
		wg_boss.1000
		wg_crisis.10004
		wg_kuat.1
		wsgancrel.234
		wg_origin.60
		wsg.11003
		wg_crisis.10006
	}
}

# Triggers when a Special Project to apply a species modification template has completed.
# Note that this will trigger once for each combination of planet & original species.
#
# This = Country
# From = Species ( Post Modification )
on_modification_complete = {
	events = {
		#wg_traits.3        
		#wg_traits.4
		#sh_traits.3      
		#sh_traits.4	
	}
}

VOP_on_monthly_pulse_country = {
	events = {
		sh.3024
		# wg_lady.48
		wg_pod.103
		wsg.9
		wsg.9910
	}
}

VOP_on_yearly_pulse = {
	events = {
		# wg_traits.1        
		# wg_traits.2
		# sh_traits.1        
		# sh_traits.2
		wg_fe.99
		wg_khan.3
		wg_lady.100
		wg_lady.122
		wg_lady.139
		wg_crisis.10021
		wg_boss.47
		sh.3016
		ap_wg_crisis.22
		ap_wg_crisis.23
		wg_origin.76
		wg_shimakaze.30200
		wg_lady.44000
		wsgranking.2010
		wg_origin.97
		PR_job_mod_KDC.2
	}
}
VOP_on_yearly_pulse_country = {
	events = {
		wsg.30100
		wg_fe.5
		wsg.3106
		# wg_crisis.301	
		wg_shimakaze.30100
		wsgancrel.705
		wg_parit.50
		wg_lady.10002
		wsg.30156
		wsg.9989
		#wsgancrel.133
		wsgancrel.96
		wg_origin.82
		wsg.9996
		wsg.9997
		sh.4200 # ai用
		sh.4201 # ai用
		sh.4202 # ai用
		wsg.4201 # ai用
		wsg.4202 # ai用
		wsg.4203 # ai用
		wsg.4204 # ai用
		wsg.4205 # ai用
		wsg.4206 # ai用

		wsgranking.1999
	}
}

VOP_on_monthly_pulse = {
	events = {
		wg_crisis.13
		wg_crisis_2.13
		wg_crisis.98
		wg_khan.31
		wg_crisis.10035
		wg_traits.6

		wg_lady.30
		wg_yukikaze.14
		wg_dragon.11
	}

}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		wsg.1100
		wsg.11000 # for ai used
		wsg.11001 # for ai used
		wsg.11002 # for ai used
		#wsg.1150
		#wsg.1151
		#wsg.1152
		#wsg.1153
		wsg.3010
		wsgancrel.20
		sh.6
		wsg.3050
		sh.30280
		sh.3029
		wsgancrel.120
		wsg.3118
		sh.3054
		wg_bubbles.1
		wg_bubbles.2
		wg_parit.22
		wg_parit.35
		wg_parit.57
		wg_boss.113
		wsg.3015
		wsg.31200
		wsg.3122
		ap_wg_crisis.1005
		ap_wg_crisis.1006
		ap_wg_crisis.1011
		wg_pod.104
		wg_pod.105
		sh.4200 # ai用
		sh.4201 # ai用
		sh.4202 # ai用
		wsg.4201 # ai用
		wsg.4202 # ai用
		wsg.4203 # ai用
		wsg.4204 # ai用
		wsg.4205 # ai用
		wsg.4206 # ai用
		sh_fe.29
	}
}


# Called during empire initialization when starting a new game if has_secondary_species game rule is true.
# Called before empire_init_create_capital_pops.
# scope: planet
# from: founder species
# fromfrom: secondary species (if exists)
empire_init_capital_planet = {
	events = {
		#game_start.12 # starting buildings, districts & pops
		# at this point the species might have changed (because we added traits), so FROMFROM might not be the secondary species anymore
		wsg.2
	}
}

# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {
		wsg.1010
		wsg.2010
		wsg.2110
		sh.1010
		sh.2010
		sh.3010
		wsg.12004
	}
}

# Executed when the ruler is ousted and goes back to their pre-ruler class
# From = Previous Ruler, already has the new class
# This = Country
on_ruler_back_to_pre_ruler_class = {
	events = {
		wsg.1012
		wsg.2012
		wsg.2109
		sh.1011
		sh.2011
		sh.3011
	}
}

# # Executed as new ruler has been set
# # This = Country
on_ruler_set = {
	events = {
		wsg.1011
		wsg.2011
		wsg.2111
		sh.1012
		sh.2012
		sh.30111
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		wg_crisis.11
		wg_crisis.44
		wg_boss.3
		wg_origin.92
		uf_buff.4
		wg_astesia.10
	}	
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		wg_crisis.45
		ap_wg_crisis.15
		ap_wg_crisis.16
		ap_wg_crisis.17
		wg_boss.128
	}
}

# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
		sh.3021
		wsg.3043
		wg_crisis.100
		wg_crisis.104
		wg_crisis.46
		wg_crisis.70
		wg_crisis.93
		wg_crisis.113
		wsg.3078
		wsg.3081
		wg_lady.33
		wg_lady.34
		wg_lady.43
		wg_boss.23
		wg_boss.29
		wg_boss.33
		wg_boss.37
		wg_boss.51
		wg_boss.87
		sh.3046
		wg_khan.22
		wg_khan.24
		#wg_khan.323
		wg_boss.105
		wg_boss.109
		wg_dragon.8
		wg_dragon.9
		wg_boss.207
		wg_boss.252
		wg_boss.256
		wg_yukikaze.10
		wg_yukikaze.11
	}
}


# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		wg_lady.90
		wg_boss.68
		wg_khan.200
		wg_khan.213
		wg_bubbles.11
		
		wg_boss.230
		ap_wg_crisis.14
		ap_wg_crisis.1064
		wg_crisis.87
	}
}

on_building_complete = {
	events = {
		wsg.3033
		# wsg.9986
		wg_paragon.1003
	}
}

on_building_replaced = {
	events = {
		wsg.3033
		wg_paragon.1003
	}
}


on_colony_1_year_old = {
	events = {
		wsg.3037
	}
}

# This = owner of fleet 1
# From = owner of fleet 2
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_entering_battle = {
	events = {
		mwsge_drone.1
		mwsge_drone.11
		mwsge_drone.31
		wg_khan.210
		wg_khan.300
		wg_dragon.16
		ap_wg_crisis.13
		wg_crisis.85
		wg_origin.90
		wg_boss.264
	}
}

# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_lost = {
	events = {
		wg_boss.266
	}
}

# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		wg_crisis.20
		wg_crisis.39
		wg_crisis.23
		wg_old_leader_diplo.1000
		wg_old_leader_diplo.2000
		wg_lady.1000
		wg_lady.1001
		wg_lady.10000
		wg_lady.10001
		# ??
		wg_old_leader_diplo.3000
		wg_khan.6
		wg_old_leader_diplo.5000
		wg_worm.99
		wg_worm.100
		wg_astesia.3
		wg_great_ming.16
		wg_great_ming.31
		uf_origin.10017
	}
}

# Planet has taken damage from orbital bombardment
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		wg_crisis.10
		sh.3031
		wg_khan.101
		wg_khan.102
		wg_khan.103
		wg_pod.2
	}
}

# This = owner of fleet
# From = fleet
# FromFrom = planet (if any)
on_fleet_auto_move_arrival = {
	events = {
		# wg_crisis.41
		wg_bubbles.13
	}
}

#This = destroyed country
#From = optional, destroyer (country)
on_country_destroyed = {
	events = {
		wg_khan.15
		wg_boss.160
		ap_wg_crisis.24
		wg_boss.364
		wg_great_ming.19
	}
}

# this = country
VOP_on_bi_yearly_pulse_country = {
	events = {
	}
}

# This = owner of fleet
# From = disbanded fleet
on_fleet_disbanded = {
	events = {
		wg_crisis.71
		wg_lady.42
		wg_dragon.14
		wg_yukikaze.13
	}
}

# This = owner of fleet 1 (winner)
# From = owner of fleet 2 (loser)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_won = {
	events = {
		wg_crisis.72
		wg_khan.212
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		wsg.3039
		# wg_lady.37
		wg_parit.6
		wg_khan.104
		wg_pod.100
		wsg.3310
	}
}

# Triggers country_event for the defender upon victory
# Root = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_win = {
	events = {
		wg_pod.100
	}
}

# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_lose = {
	events = {
		# wg_dragon.10
		# wg_yukikaze.12
	}
}

# Triggers country_event for the attacker upon defeat
# This = country, attack leader
# From = country, planet owner
# FromFrom = planet
on_planet_attackers_lose = {
	events = {
		wsg.30390
		# wg_lady.38
		wg_khan.110
		wg_dragon.10
		wg_yukikaze.12
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System	
# FromFrom = Country
on_entering_system = {
	events = {
		# wg_bubbles.19
		wg_boss.10002
	}
}

# Triggers event when each country first sends a ship into the system (once per country)
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		wg_boss.10000
	}
}

# A fleet has entered a system
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	events = {
		wg_parit.16
		# wg_boss.71
		wg_khan.307
		wg_khan.316
		wg_great_ming.3
	}
}

# This = construction ship
# Fires when construction is complete,
# immediately before station is created
on_building_observation_station = {
	events = {
		wsg.3101
	}
}

# Executed as a leader has died
# This = Country
# From = Leader
on_leader_death = {
	events = {
		wg_crisis.73
		wg_lady.32
		wg_shimakaze.7
		wg_bubbles.8
		wg_bubbles.22
	}
}

# Executed as new ruler has been set
# This = Country
on_ruler_set = {
	events = {
		wsg.3107
	}
}

#From = Planet scope
#This = Fleet scope
on_fleet_enter_orbit = {
	events = {
		wg_parit.3
		wg_pod.102
	}
}

# A leader leveled up.
# Scope = Country
# From = Leader
on_leader_level_up = {
	events = {
		wg_yukikaze.16
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey_planet = {
	events = {
		wg_boss.141
		sh.3055
	}
}

# A ship is done surveying the last unsurveyed planet in a system
# Scope = ship
# From = system
on_system_survey_ship = {
	events = {
	}
}

# This = owner of fleet 1 (winner)
# From = owner of fleet 2 (loser)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_won = {
	events = {
		wg_khan.306
	}
}

# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won = {
	events = {
		wg_astesia.168
	}
}

# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
		wsg.3251
		wsg.3253
	}
}


# Executed right after country has established communications with another country
# This = Country which established the communications
# From = Country which communications were established with
on_post_communications_established = {
	events = {
	}
}

on_mid_game_pulse = {
	events = {
		wg_fe.20000
	}
}

# This = Fleet ( science vessel )
# From = Archaeological Site
on_arch_stage_finished = {
	events = {
	}
}

on_arch_site_finished = {
	events = {
	}
}
on_ship_disabled = {
	events = {
		wg_boss.77
		wg_khan.309
		wg_boss.96
		wg_megastructures.115
	}
}

#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#From = Country scope (new owner)
#This = Planet scope
on_planet_transfer = {
	events = {
		wsg.3200
	}
}

#Fired whenever a new owner is set for a planet, and the planet was aggressively conquered
#Fired in ADDITION to on_planet_transfer
#From = Country scope (new owner)
#This = Planet scope
on_planet_conquer = {
	events = {
		wsg.3200
		ap_wg_crisis.20
	}
}

# A Megastructure has been built
# Root = Country
# From = Megastructure
# FromFrom = System
# FromFromFrom = Fleet
on_megastructure_built = {
	events = {
		wsg.3025
		wsg.3028
		wsg.3083
		ap_wg_crisis.1012
		wsg.4200 # for ai used
	}
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		wsg.3084
		wsg.3085
		wsg.3086
		ap_wg_crisis.1013
		ap_wg_crisis.1014
		ap_wg_crisis.1015
		ap_wg_crisis.1016
	}
}

# A fleet executes a move order to exit borders
# Scope = Fleet
# From = Origin System
# FromFrom = Destination System
on_crossing_border = {
	events = {
		wg_boss.92
	}
}

on_colonization_started = {
	events = {
		wsg.20122
		sh.3066
		wg_boss.351
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		# wsg.30370
		wsg.9994
		ap_wg_crisis.1105
		ap_wg_crisis.1106
		sh.3068
		PR_job_mod_KDC.12
		wg_boss.353
		wg_great_ming.51
	}
}

# No scope, like on_game_start
on_late_game_pulse = {
	events = {
		wg_origin.10029
	}
}

# Triggered when two empires discover each other
# This = Empire 1
# From = Empire 2
# Fromfromfrom = System where contact occurred
on_first_contact = {
	events = {
		wsgranking.994
	}
}

# This = construction ship
# Fires when construction is complete,
# immediately before station is created
on_building_starbase_outpost = {
	events = {
		wg_boss.210
	}
}

# This = starbase being destroyed
# From = fleet that destroyed the starbase
on_starbase_destroyed = {
	events = {
		ap_wg_crisis.18
	}
}

# A pop has finished purging
# This = Planet scope
# From = Country
# FromFrom = Pop
on_pop_purged = {
	events = {
		ap_wg_crisis.19
	}
}

# This = subject
# From = subject's overlord
on_becoming_subject = {
	events = {
		ap_wg_crisis.21
	}
}

# This = country
# From = opponent war leader
on_entering_war = {
	events = {
		ap_wg_crisis.1055
		wsg.3300
	}
}
# A war has ended
# Root = Loser
# From = Main Winner
on_war_ended = {
	events = {
		wsg.3302
	}
}

# A Megastructure has begun to be upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgrade_begin = {
	events = {
		ap_wg_crisis.1036
	}
}
# Called when a Starbase changes owner
# THIS = Ship (Starbase)
# FROM = Former Owner (Country)
on_starbase_transfer = {
	events = {
		ap_wg_crisis.10018
		ap_wg_crisis.1071
	}
}

# No scope, like on_game_start
# Does not run when loading MP saves due to OOS concerns
on_single_player_save_game_load = {
	events = {
		wg_crisis.301
		wg_origin.97
		wsg.99
		PR_job_mod_KDC.2
		PR_job_mod_KDC.100
	}
}

# A ship has been built
# Root = Ship
# From = Planet
on_ship_built = {
	events = {
		wg_pod.1
	}
}

# A ship has been upgraded
#  Root = Ship
on_ship_upgraded = {
	events = {
		wg_pod.1
	}
}

# Planets starts being terraformed
# This = Planet
# From = Terraforming country
on_terraforming_begun = {
	random_events = {
		2 = wg_yukikaze.10000
		1 = 0
	}
}

# Planet has been terraformed
# This = Planet
# From = Terraforming country
on_terraforming_complete = {
	events = {
		wg_yukikaze.10100
	}
}

# Executed as a leader has been fired
# This = Country
# From = Leader
on_leader_fired = {
	events = {
		wsg.30117
	}
}

# THIS = Planet: Branch office planet
# FROM = Country: Branch office owner
on_branch_office_closed = {
	events = {
		sh.3111
		sh.3112
	}
}

VOP_on_bi_yearly_pulse_country = {
	events = {
		wsg.12000
	}
}

#An army construction has been completed.
# This = Planet
# From = Army
on_army_recruited = {
	events = {
		wsg.3313
	}
}

# A building construction has been completed, which is an upgrade of previous building.
# This = Planet
on_building_upgraded = {
	events = {
		wg_boss.356
		wg_boss.357
		wg_boss.358
	}
}

# fires when a country releases a sector as a vassal
# This = released vassal
# From = overlord
on_released_as_vassal = {
	events = {
		wg_subject.1
		wg_subject.3
	}
}

on_ground_combat_started = {
	events = {
		wg_paragon.1019
	}
}

on_late_game_pulse_country = {
	events = {
		wg_boss.268
	}
}