# （苏可汗专用）函数式自增长资源扣除函数
# formula = BASE + BASE * ( SQE_COF * years of being subject ^ 2 * ( 1 - MINUS_COF )) * ( SQE_COF - MINUS_COF )
wg_khan_tribute_values_p1 = {
	base = 1
	subtract = $MINUS_COF$
	mult = this.years_be_khan_subject
	mult = this.years_be_khan_subject
	mult = $SQE_COF$
}

wg_khan_tribute_values = {
	base = $SQE_COF$
	subtract = $MINUS_COF$
	multiply = value:wg_khan_tribute_values_p1|MINUS_COF|$MINUS_COF$|SQE_COF|$SQE_COF$|
	add = $BASE$
}

# value = @\[ ( $BASE$ + ( $BASE$ * ( $SQE_COF$ * $YEARS$ * $YEARS$ * ( 1 - $MINUS_COF$ )) * ( $SQE_COF$ - $MINUS_COF$ )))]
wg_Deep_Eyes_White_Dragon_Ship_death = {
	base = 0
	add = wg_Deep_Eyes_White_Dragon_count
	min = 0
}

wg_modifier = {
	base = 0
	add = 1
	add = modifier:$MODIFIER$
}

wg_pop_amount = {
	base = 0
	add = trigger:pop_amount
	mult = 0.01
	min = 0
}

wg_pop_free_house = {
	base = 0
	add = trigger:free_housing
	mult = 0.01
	min = 0
}

wg_pop_free_job = {
	base = 0
	add = trigger:free_jobs
	mult = 0.01
	min = 0
}

wg_attendant_city_function_mult = {
	base = 0
	add = value:wg_pop_free_job
	divide = value:wg_pop_amount
}

wg_attendant_city_function = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = { type = any }
		mode = add
	}
	mult = value:wg_attendant_city_function_mult
	min = 1
}

wg_attendant_growth = {
	base = 1
	add = value:wg_attendant_city_function
	complex_trigger_modifier = {
		trigger = count_owned_pop_group
		potential = { is_scope_type = planet }
		trigger_scope = this
		mode = divide
	}
	modifier = {
		OR = {
			has_modifier = planet_population_control
			has_modifier = planet_uf_population_control
		}
		set = 0
	}
}

wg_planet_pop_assembly_average_int = {
	base = 0	
	add = value:wg_attendant_growth
	mult = value:wg_modifier|MODIFIER|wg_planet_pop_assembly_average_mult|
	max = value:wg_pop_free_house
}
