monolith_crisis_bypass_1 = {
	name = "NAME_monolith_crisis_bypass_1"
	is_pathfind = yes
	uses_action = no
	requires_exploration = no
	always_active = yes
	extends_sensors = yes
	windup_time = 0
	winddown_time = 0
	ftl_multiplier = 0			# 0 means instant
	icon_frame = 30
	remember_instances = no 	# whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
	galactic_map_tooltip_header = monolith_crisis_bypass_1_name
	galactic_map_tooltip_desc = monolith_crisis_bypass_1_desc
	connection_type = scripted_connection
	animation_time = 1
	ftl_ship_effect = "gateway_ftl_ship_effect_entity"
	ftl_bypass_effect = "gateway_ftl_bypass_effect_entity"

	country_can_use = {
		custom_tooltip_fail = {
			OR = {
				AND = {
					is_country_type = monolith_crisis_country
					OR = {
						AND = { 
							NOT = { exists = from }
							NAND = {
								# 如果节点被攻破，可以无条件通过该类型传送门
								event_target:monolith_crisis_1_shield_system = { exists = space_owner }
								# 如果没有控制任意一个有传送门的星系，则所有该类型传送门都可以通行，否则需要控制传送门
								event_target:monolith_crisis_country = {
									any_system_within_border = {
										NOT = { has_star_flag = monolith_crisis_shield_1_system_flag }
										has_star_flag = monolith_crisis_bypass_systems_1
									}
								}
							}
						}
						from = { is_country_type = monolith_crisis_country }
					}
				}
				AND = {
					NOT = { is_country_type = monolith_crisis_country }
					has_global_flag = reverse_engineering_monolith_bypass_1
				}
			}
			text = "monolith_gate_no_access"
		}
	}
	
	scripted_connection = {
	
		# defines endpoints that can only reach the "nexus"
		node = {
			# system scope
			has_star_flag = monolith_crisis_bypass_systems_1
		}
	
		# defines endpoint(s) that can reach all "nodes" (but not other nexuses)
		nexus = {
			# system scope
			has_star_flag = monolith_crisis_shield_1_system_flag
		}
	}
}

monolith_crisis_bypass_2 = {
	name = "NAME_monolith_crisis_bypass_2"
	is_pathfind = yes
	uses_action = no
	requires_exploration = no
	always_active = yes
	extends_sensors = no
	windup_time = 0
	winddown_time = 0
	ftl_multiplier = 0			# 0 means instant
	icon_frame = 30
	remember_instances = no 	# whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
	galactic_map_tooltip_header = monolith_crisis_bypass_2_name
	galactic_map_tooltip_desc = monolith_crisis_bypass_2_desc
	connection_type = scripted_connection
	animation_time = 1
	ftl_ship_effect = "gateway_ftl_ship_effect_entity"
	ftl_bypass_effect = "gateway_ftl_bypass_effect_entity"

	country_can_use = {
		custom_tooltip_fail = {
			OR = {
				AND = {
					is_country_type = monolith_crisis_country
					OR = {
						AND = { 
							NOT = { exists = from }
							NAND = {
								# 如果节点被攻破，可以无条件通过该类型传送门
								event_target:monolith_crisis_2_shield_system = { exists = space_owner }
								# 如果没有控制任意一个有传送门的星系，则所有该类型传送门都可以通行，否则需要控制传送门
								event_target:monolith_crisis_country = {
									any_system_within_border = {
										NOT = { has_star_flag = monolith_crisis_shield_2_system_flag }
										has_star_flag = monolith_crisis_bypass_systems_2
									}
								}
							}
						}
						from = { is_country_type = monolith_crisis_country }
					}
				}
				AND = {
					NOT = { is_country_type = monolith_crisis_country }
					has_global_flag = reverse_engineering_monolith_bypass_2
				}
			}
			text = "monolith_gate_no_access"
		}
	}
	
	scripted_connection = {
	
		# defines endpoints that can only reach the "nexus"
		node = {
			# system scope
			has_star_flag = monolith_crisis_bypass_systems_2
		}
	
		# defines endpoint(s) that can reach all "nodes" (but not other nexuses)
		nexus = {
			# system scope
			has_star_flag = monolith_crisis_shield_2_system_flag
		}
	}
}

monolith_crisis_bypass_3 = {
	name = "NAME_monolith_crisis_bypass_3"
	is_pathfind = yes
	uses_action = no
	requires_exploration = no
	always_active = yes
	extends_sensors = no
	windup_time = 0
	winddown_time = 0
	ftl_multiplier = 0			# 0 means instant
	icon_frame = 30
	remember_instances = no 	# whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
	galactic_map_tooltip_header = monolith_crisis_bypass_3_name
	galactic_map_tooltip_desc = monolith_crisis_bypass_3_desc
	connection_type = scripted_connection
	animation_time = 1
	ftl_ship_effect = "gateway_ftl_ship_effect_entity"
	ftl_bypass_effect = "gateway_ftl_bypass_effect_entity"

	country_can_use = {
		custom_tooltip_fail = {
			OR = {
				AND = {
					is_country_type = monolith_crisis_country
					OR = {
						AND = { 
							NOT = { exists = from }
							NAND = {
								# 如果节点被攻破，可以无条件通过该类型传送门
								event_target:monolith_crisis_3_shield_system = { exists = space_owner }
								# 如果没有控制任意一个有传送门的星系，则所有该类型传送门都可以通行，否则需要控制传送门
								event_target:monolith_crisis_country = {
									any_system_within_border = {
										NOT = { has_star_flag = monolith_crisis_shield_3_system_flag }
										has_star_flag = monolith_crisis_bypass_systems_3
									}
								}
							}
						}
						from = { is_country_type = monolith_crisis_country }
					}
				}
				AND = {
					NOT = { is_country_type = monolith_crisis_country }
					has_global_flag = reverse_engineering_monolith_bypass_3
				}
			}
			text = "monolith_gate_no_access"
		}
	}
	
	scripted_connection = {
	
		# defines endpoints that can only reach the "nexus"
		node = {
			# system scope
			has_star_flag = monolith_crisis_bypass_systems_3
		}
	
		# defines endpoint(s) that can reach all "nodes" (but not other nexuses)
		nexus = {
			# system scope
			has_star_flag = monolith_crisis_shield_3_system_flag
		}
	}
}